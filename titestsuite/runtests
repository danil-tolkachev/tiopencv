#!/bin/bash
# 
#################################################################################################
#                                                                                               #
# Accuracy test script for OpenCV 3.0 with OpenCL support                                       #
#                                                                                               #
# Before executing this script the following environment variables should be defined:           #
#  on K2H: export OPENCV_OPENCL_DEVICE='TI KeyStone II:ACCELERATOR:TI Multicore C66 DSP'        #   
#  on AM57: export OPENCV_OPENCL_DEVICE='TI AM57:ACCELERATOR:TI Multicore C66 DSP'              #
#                                                                                               #
#  export OPENCV_BUILDDIR=<BUILD_DIRECTORY_FOR_OPENCV>                                          #
#  export OPENCV_TEST_DATA_PATH=<path to opencv_extra/testdata>                                 #
#                                                                                               #
# The output log is in ./opencv_test_log.out                                                    #
#                                                                                               #
#################################################################################################


declare -a modules=("calib3d" "features2d" "flann" "imgcodecs" "ml" "objdetect" "photo" "shape" "stitching" "superres" "video" "videoio")
declare -a dsp_modules=("calib3d" "features2d" "objdetect" "photo"  "video")
declare -a dsp_modules_2=("stitching" "videoio")

#OPENCV_BUILDDIR=../../builds/minbuild
export OUTLOG_FILENAME="opencv_test_log.out"
# now loop through the above array with OCL routines (OpenCL enabled)
echo "....................................................................................................."
echo ".................................. OpenCL Tests......................................................"
SECONDS=0
# special tests first
echo "testing core module"
./test_core_ocl
duration=$SECONDS
SECONDS=0
echo "elapsed time= $(($duration / 60)) minutes and $(($duration % 60)) seconds ."
echo "testing imgproc module"
./test_imgproc_ocl
curr_duration=$SECONDS
SECONDS=0
duration=$(( duration + curr_duration )) 
echo "elapsed time= $(($curr_duration / 60)) minutes and $(($curr_duration % 60)) seconds ."
echo "total time= $(($duration / 60)) minutes and $(($duration % 60)) seconds ."

for i in "${dsp_modules[@]}"
do
   testfun=$OPENCV_BUILDDIR/bin/opencv_test_$i
#   echo $testfun
   if [ -e $testfun ]
   then
      echo "testing $i module"
      eval "$testfun --gtest_filter=OCL*/0:OCL*/1 >> $OUTLOG_FILENAME 2> tmp.txt"
      rm /tmp/*open* 2> tmp.txt
   fi
   # or do whatever with individual element of the array
   curr_duration=$SECONDS
   SECONDS=0
   duration=$(( duration + curr_duration )) 
   echo "elapsed time= $(($curr_duration / 60)) minutes and $(($curr_duration % 60)) seconds ."
   echo "total time= $(($duration / 60)) minutes and $(($duration % 60)) seconds ."
done

for i in "${dsp_modules_2[@]}"
do
   testfun=$OPENCV_BUILDDIR/bin/opencv_test_$i
   if [ -e $testfun ]
   then
      echo "testing $i module"
      eval "$testfun --gtest_filter=OCL* >> $OUTLOG_FILENAME 2> tmp.txt"
      rm /tmp/*open* 2> tmp.txt
   fi
   # or do whatever with individual element of the array
   curr_duration=$SECONDS
   SECONDS=0
   duration=$(( duration + curr_duration )) 
   echo "elapsed time= $(($curr_duration / 60)) minutes and $(($curr_duration % 60)) seconds ."
   echo "total time= $(($duration / 60)) minutes and $(($duration % 60)) seconds ."
done


echo "....................................................................................................."
echo ".................................. ARM Tests......................................................"
# now loop through the above array with ARM routines (OpenCL disabled)
export OPENCV_OPENCL_DEVICE=
echo "testing core module"
testcmd="$OPENCV_BUILDDIR/bin/opencv_test_core --gtest_filter=-*OCL*:*UMat* >> $OUTLOG_FILENAME 2> tmp.txt"
eval $testcmd
rm /tmp/*open* 2> tmp.txt
curr_duration=$SECONDS
SECONDS=0
duration=$(( duration + curr_duration )) 
echo "elapsed time= $(($curr_duration / 60)) minutes and $(($curr_duration % 60)) seconds ."
echo "total time= $(($duration / 60)) minutes and $(($duration % 60)) seconds ."

#echo "testing imgproc module"
testcmd="$OPENCV_BUILDDIR/bin/opencv_test_imgproc --gtest_filter=-*OCL* >> $OUTLOG_FILENAME 2> tmp.txt"
eval $testcmd
rm /tmp/*open* 2> tmp.txt
curr_duration=$SECONDS
SECONDS=0
duration=$(( duration + curr_duration )) 
echo "elapsed time= $(($curr_duration / 60)) minutes and $(($curr_duration % 60)) seconds ."
echo "total time= $(($duration / 60)) minutes and $(($duration % 60)) seconds ."

for i in "${modules[@]}"
do
   testfun=$OPENCV_BUILDDIR/bin/opencv_test_$i
   if [ -f $testfun ];
   then
      echo "testing $i module"
      eval "$testfun  --gtest_filter=-*OCL*:*ShapeEMD*:*StereoSGBM*:*seek_random_synthetic*:*Image.write_read*:**ffmpeg_writebig** >> $OUTLOG_FILENAME 2> tmp.txt" 
      rm /tmp/*open* 2> tmp.txt
   fi
   # or do whatever with individual element of the array
   curr_duration=$SECONDS
   SECONDS=0
   duration=$(( duration + curr_duration )) 
   echo "elapsed time= $(($curr_duration / 60)) minutes and $(($curr_duration % 60)) seconds ."
   echo "total time= $(($duration / 60)) minutes and $(($duration % 60)) seconds ."
done
echo 
# now counting the number of errors
all_count=0
pass_count=$(grep -o "OK" $OUTLOG_FILENAME | wc -w)
all_count=$(grep -o "RUN" $OUTLOG_FILENAME | wc -w)
fail_count=$(( all_count - pass_count ))
echo allTests =$all_count, passed=$pass_count, failed=$fail_count
